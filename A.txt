Los grafos hipercubo son increíblemente regulares, por eso has dedicado mucho tiempo a estudiar las matemáticas que los rodean. Los vértices de un grafo hipercubo de dimensión 
n
n son todas las cadenas binarias de longitud 
n
n, y dos vértices están conectados si difieren en una sola posición. Hay muchas relaciones interesantes entre los grafos hipercubo y los códigos correctores de errores.

Una de esas relaciones tiene que ver con el Código Gray de 
n
n bits, que es un ordenamiento de las cadenas binarias de longitud 
n
n, definido de forma recursiva así: la secuencia de palabras en el código de 
n
n bits primero consiste en las palabras del código de 
(
n
−
1
)
(n−1) bits, cada una precedida por un 
0
0, seguido por las mismas palabras en orden inverso, cada una precedida por un 
1
1. El Código Gray de 
1
1 bits simplemente consta de un 
0
0 y un 
1
1. Por ejemplo, el Código Gray de 
3
3 bits es la siguiente secuencia:

000
,
001
,
011
,
010
,
110
,
111
,
101
,
100
000,001,011,010,110,111,101,100
Ahora, el Código Gray de 
n
n bits forma un camino hamiltoniano en el hipercubo de dimensión 
n
n, es decir, un camino que visita cada vértice exactamente una vez (mira la Figura 1).

\includegraphics[width=0.33\textwidth ]{example-fig}
Figura 1: El hipercubo de dimensión 
3
3 y el camino hamiltoniano correspondiente al Código Gray de 
3
3 bits.
Te preguntas cuántos vértices hay entre los vértices 
0
n
0 
n
  (
n
n ceros) y 
1
n
1 
n
  (
n
n unos) en ese camino. Obviamente estará en algún lugar entre 
2
n
−
1
−
1
2 
n−1
 −1 y 
2
n
−
2
2 
n
 −2, ya que en general 
0
n
0 
n
  es el primer vértice, y 
1
n
1 
n
  está en alguna parte de la segunda mitad del camino. Tras encontrar una respuesta elegante a esta pregunta, te preguntas si puedes generalizarla escribiendo un programa que determine el número de vértices entre dos vértices arbitrarios del hipercubo, en el camino correspondiente al Código Gray.

Entrada
La entrada consiste en una sola línea, que contiene:

un entero 
n
n (
1
≤
n
≤
60
1≤n≤60), la dimensión del hipercubo

dos cadenas binarias 
a
a y 
b
b, ambas de longitud 
n
n, donde 
a
a aparece antes que 
b
b en el Código Gray de 
n
n bits.

Salida
Imprime el número de palabras código que hay entre 
a
a y 
b
b en el Código Gray de 
n
n bits.

Ejemplo 1
Inputcopy	Outputcopy
3 001 111
3
Ejemplo 2
Inputcopy	Outputcopy
3 110 100
2
